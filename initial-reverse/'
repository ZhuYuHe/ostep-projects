#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>

bool str_equal(char *s1, char *s2) {
    while (*s1 != '\0' && *s2 != '\0'){
        if (*s1 != *s2) {
            return false;
        }
        s1++;
        s2++;
    }
    return true;
}

int main(int argc, char* argv[]) {
    FILE *inp = stdin;
    FILE *out = stdout;
    if (argc > 3) {
        fprintf(stderr, "usage: reverse <input> <output>\n"); 
        return 1;
    }
    if (argc == 3) {
        if (str_equal(argv[1], argv[2])) {
            fprintf(stderr, "reverse: input and output file must differ\n");
            return 1;
        }
        inp = fopen(argv[1], "r");
        if (inp == NULL) {
            fprintf(stderr, "reverse: cannot open file '%s'\n", argv[1]);
            return 1;
        }
        out = fopen(argv[2], "w");
        if (out == NULL) {
            fprintf(stderr, "reverse: cannot open file '%s'\n", argv[2]);
            return 1;
        }
    } else {
        inp = fopen(argv[1], "r");
        if (inp == NULL) {
            fprintf(stderr, "reverse: cannot open file '%s'\n", argv[1]);
            return 1;
        }
    }
    char **str_arr = malloc(sizeof(char*)); 
    char *line = NULL;
    size_t n = 0;
    int len = 0;
    size_t nread;
    while ((nread = getline(&line, &n, inp)) != -1) {
        //printf("nread: %ld\n", nread);
        len++;
        //if (realloc(str_arr, sizeof(char *) * len) == NULL) {
            //fprintf(stderr, "malloc failed\n");
            //return 1;
        //}
        str_arr[len-1] = (char *)malloc(sizeof(char) * (nread+1));
        strcpy(str_arr[len-1], line);
        line = NULL;
        n = 0;
    }
    for (int i = len - 1; i >= 0; --i) {
        fwrite(str_arr[i], sizeof(char), sizeof(str_arr[i]), out);
    }
}
